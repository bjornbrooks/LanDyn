% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/accumRas.R
\name{accumRas}
\alias{accumRas}
\title{Accumulate values across a stack of rasters.}
\usage{
accumRas(ifpath, ptrn, ofname, ovname, format, datatype, FUN, verbose = TRUE)
}
\arguments{
\item{ifpath}{A character string indicating the path to the rasters to process, e.g., "/home/user/data/"}

\item{ptrn}{A regular expression character string that expands to list the rasters to process, e.g., "^raster200[0-9].tif$".}

\item{ofname}{A character string indicatin the desired output raster file name.}

\item{ovname}{A character string designating the variable name to include in the output raster metadata.}

\item{format}{A character string to be passed to writeRaster() and used as its format argument.}

\item{datatype}{A character string to be passed to writeRaster() and used as its datatype argument.}

\item{FUN}{The function to apply to aggregate the data for each cell across the raster stack.}

\item{verbose}{A boolean argument controlling whether or not to report the names of rasters being processed.}
}
\value{
Returns a single raster with the same spatial dimensions as the input rasters.
}
\description{
Wrapper that uses raster::calc() to apply a given function across a raster stack, resulting in a single raster representing the accumulated result of the stack.
}
\details{
accumRas returns a single raster that is the aggregate across a stack of rasters.
}
\examples{
library(raster)
r1 <- raster(matrix(sample(1:5, size=16, replace=TRUE),
                    nrow=4, byrow=TRUE))
writeRaster(r1, filename='r1', format='GTiff',
            datatype='INT1U', overwrite=TRUE)
r2 <- r1 + 10
writeRaster(r2, filename='r2', format='GTiff',
            datatype='INT1U', overwrite=TRUE)
ifpath <- paste0(getwd(), '/')
fptrn <- '^r[1,2]\\\\.tif$'
ofname <- 'rCumGain.tif'
ovname <- 'ExampleData'
accumRas(ifpath=ifpath, ptrn=fptrn,
         ofname=ofname, ovname=ovname,
         format='GTiff', datatype='INT1U', FUN=cumGain)
}
\author{
Bjorn J. Brooks
}
